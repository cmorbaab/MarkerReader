# Travis CI config for DDlite, a Jupyter/IPython notebook version of DeepDive

sudo: false  # to use container-based infra, see: http://docs.travis-ci.com/user/migrating-from-legacy/

env:
  global:
    - NUMPY: 1.10
    - SCIPY: 0.17

language:
  - python
python:
  - "2.7"
jdk:
  - oraclejdk8

cache:
  directories:
    - download
    - $HOME/.cache/pip
    - $HOME/miniconda/envs/test     # to avoid repetitively setting up Ana/Miniconda environment
    - parser                        # to avoid repetitively downloading CoreNLP
    - examples/deepdive             # to avoid repetitively installing DeepDive and Mindtagger

addons:
  apt:
    packages:
    # CoreNLP needs Java 8
    - oracle-java8-installer

# Following trick is necessary to get a binary distribution of numpy, scipy, etc. which takes too long to build every time
# See: http://stackoverflow.com/q/30588634
# See: https://github.com/Theano/Theano/blob/master/.travis.yml (for caching)
# See: http://conda.pydata.org/docs/travis.html
before_install:
  - deactivate  # leaving Travis' virtualenv first since otherwise Jupyter/IPython gets confused with conda inside a virtualenv (See: https://github.com/ipython/ipython/issues/8898)
  - mkdir -p download
  - cd download
  - travis_retry wget -c http://repo.continuum.io/miniconda/Miniconda-3.8.3-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - bash miniconda.sh -b -f -p ~/miniconda
  - cd ..
  - export PATH=~/miniconda/bin:$PATH
  - conda update --yes conda

  # Make sure Java 8 is used
  - export PATH="/usr/lib/jvm/java-8-oracle/bin:$PATH"
  - export JAVA_HOME=/usr/lib/jvm/java-8-oracle
  - java -version

install:
  # Install binary distribution of scientific python modules
  - test -e ~/miniconda/envs/test/bin/activate || ( rm -rf ~/miniconda/envs/test; conda create --yes -n test python=$TRAVIS_PYTHON_VERSION )
  - source activate test
  - conda install --yes numpy=$NUMPY scipy=$SCIPY matplotlib pip

  # Install all dependencies as per our README
  - pip install -r python-package-requirement.txt
  - test -e parser/corenlp.sh || ./install-parser.sh

  # Use runipy to run Jupyter/IPython notebooks from command-line
  - pip install runipy

script:
  # Run test modules
  - python test/MatcherTests.py
  - python test/InferenceTests.py
  # Run notebooks end-to-end
  - runipy examples/GeneTaggerExample_Extraction.ipynb  
  - runipy examples/GeneTaggerExample_Learning.ipynb
  - docs="data_small" runipy examples/GenePhenRelationExample_Extraction.ipynb

  # TODO check outputs, upload results, etc.
  # for more ideas, see: https://github.com/rossant/ipycache/issues/7
